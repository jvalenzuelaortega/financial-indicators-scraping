plugins {
    id 'application'
    id 'jacoco'
    id 'checkstyle'
}

repositories {
    mavenCentral()
}

dependencies {

    // Javalin
    implementation("io.javalin:javalin:6.2.0")

    // Slf4j for Javalin
    implementation("org.slf4j:slf4j-simple:2.0.12")

    // Jackson Databind for Javalin
    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.0")
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // jsoup HTML parser library @ https://jsoup.org/
    implementation 'org.jsoup:jsoup:1.15.1'
    
     // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'

    // Use Mockito for mocking in tests.
    testImplementation "org.mockito:mockito-core:3.+"
    
}

application {
    mainClass = 'financialindicators.App'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Jacoco
jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// jacoco report
jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
    }
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                      exclude: [
                          '**/financialindicators/config/**',
                          '**/financialindicators/dto/**',
                          '**/financialindicators/enums/**',
                          '**/financialindicators/exceptions/**',
                          '**/financialindicators/App.class'
                      ])
        }))
    }
}

// jacoco coverage rules
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

// checkstyle
checkstyle {
    toolVersion = "10.12.4"
    config = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml')
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'financialindicators.App'
    }
}